(function () {
(function () {
(function () {
    var message = '[circularReferenceManagerFactory.js] or [arrayFactory.js] or [actionHelper.js] is missing';
    try {
        if (!window.$dp.$shared.$arrayFactory) { throw message; };
        if (!window.$dp.$shared.$circularReferenceManagerFactory) { throw message };
        if (!window.$dp.$JsNet.$Helpers.$Shared.$Action.getUrlFromTemplate) { throw message };
    } catch (e) {
        message = message + '\r\n' + e.toString();
        throw message;
    }
})();
var _stampFunc = function() { return $dp.$JsNet; };
(function () {
//#region 'Model'
window.$dp = window.$dp || {};
$dp.$JsNet = $dp.$JsNet || {};
$dp.$JsNet.WebApp = $dp.$JsNet.WebApp || {};
$dp.$JsNet.WebApp.Models = $dp.$JsNet.WebApp.Models || {};
$dp.$JsNet.Microsoft = $dp.$JsNet.Microsoft || {};
$dp.$JsNet.Microsoft.AspNet = $dp.$JsNet.Microsoft.AspNet || {};
$dp.$JsNet.Microsoft.AspNet.Identity = $dp.$JsNet.Microsoft.AspNet.Identity || {};
$dp.$JsNet.Microsoft.AspNet.Identity.EntityFramework = $dp.$JsNet.Microsoft.AspNet.Identity.EntityFramework || {};
$dp.$JsNet.WebApp.Models.Utility = $dp.$JsNet.WebApp.Models.Utility || {};
var _alias0 = $dp.$JsNet.WebApp.Models;
var _alias3 = $dp.$JsNet.Microsoft.AspNet.Identity.EntityFramework;
var _alias1 = $dp.$JsNet.WebApp.Models.Utility;
_alias0.AddExternalLoginBindingModel = _alias0.AddExternalLoginBindingModel || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"ExternalAccessToken":""};obj.constructor=_alias0.AddExternalLoginBindingModel; return obj; };
_alias0.ChangePasswordBindingModel = _alias0.ChangePasswordBindingModel || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"OldPassword":"","NewPassword":"","ConfirmPassword":""};obj.constructor=_alias0.ChangePasswordBindingModel; return obj; };
_alias0.RegisterBindingModel = _alias0.RegisterBindingModel || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"Email":"","Password":"","ConfirmPassword":""};obj.constructor=_alias0.RegisterBindingModel; return obj; };
_alias0.RegisterExternalBindingModel = _alias0.RegisterExternalBindingModel || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"Email":""};obj.constructor=_alias0.RegisterExternalBindingModel; return obj; };
_alias0.RemoveLoginBindingModel = _alias0.RemoveLoginBindingModel || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"LoginProvider":"","ProviderKey":""};obj.constructor=_alias0.RemoveLoginBindingModel; return obj; };
_alias0.SetPasswordBindingModel = _alias0.SetPasswordBindingModel || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"NewPassword":"","ConfirmPassword":""};obj.constructor=_alias0.SetPasswordBindingModel; return obj; };
_alias0.ExternalLoginViewModel = _alias0.ExternalLoginViewModel || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"Name":"","Url":"","State":""};obj.constructor=_alias0.ExternalLoginViewModel; return obj; };
_alias0.UserLoginInfoViewModel = _alias0.UserLoginInfoViewModel || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"LoginProvider":"","ProviderKey":""};obj.constructor=_alias0.UserLoginInfoViewModel; return obj; };
_alias0.UserInfoViewModel = _alias0.UserInfoViewModel || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"Email":"","HasRegistered":false,"LoginProvider":""};obj.constructor=_alias0.UserInfoViewModel; return obj; };
_alias0.todoItem = _alias0.todoItem || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"id":0,"task":"","completed":false};obj.constructor=_alias0.todoItem; return obj; };
_alias3.IdentityUserRole = _alias3.IdentityUserRole || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"UserId":"","RoleId":""};obj.constructor=_alias3.IdentityUserRole; return obj; };
_alias3.IdentityUserClaim = _alias3.IdentityUserClaim || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"Id":0,"UserId":"","ClaimType":"","ClaimValue":""};obj.constructor=_alias3.IdentityUserClaim; return obj; };
_alias3.IdentityUserLogin = _alias3.IdentityUserLogin || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"LoginProvider":"","ProviderKey":"","UserId":""};obj.constructor=_alias3.IdentityUserLogin; return obj; };
_alias0.TodoItemViewModel = _alias0.TodoItemViewModel || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"task":"","completed":false};obj.constructor=_alias0.TodoItemViewModel; return obj; };
_alias1.ModelErrorChecker = _alias1.ModelErrorChecker || function(){ var args = Array.prototype.slice.call(arguments); var obj = {};obj.constructor=_alias1.ModelErrorChecker; return obj; };
_alias0.ManageInfoViewModel = _alias0.ManageInfoViewModel || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"LocalLoginProvider":"","Email":"","Logins":$dp.$shared.$arrayFactory($dp.$shared.$circularReferenceManagerFactory.apply(null, args)(_alias0.UserLoginInfoViewModel)),"ExternalLoginProviders":$dp.$shared.$arrayFactory($dp.$shared.$circularReferenceManagerFactory.apply(null, args)(_alias0.ExternalLoginViewModel))};obj.constructor=_alias0.ManageInfoViewModel; return obj; };
_alias0.User = _alias0.User || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"firstName":"","todoItems":$dp.$shared.$arrayFactory($dp.$shared.$circularReferenceManagerFactory.apply(null, args)(_alias0.todoItem)),"Email":"","EmailConfirmed":false,"PasswordHash":"","SecurityStamp":"","PhoneNumber":"","PhoneNumberConfirmed":false,"TwoFactorEnabled":false,"LockoutEndDateUtc":new Date(),"LockoutEnabled":false,"AccessFailedCount":0,"Roles":$dp.$shared.$arrayFactory($dp.$shared.$circularReferenceManagerFactory.apply(null, args)($dp.$JsNet.Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole)),"Claims":$dp.$shared.$arrayFactory($dp.$shared.$circularReferenceManagerFactory.apply(null, args)($dp.$JsNet.Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim)),"Logins":$dp.$shared.$arrayFactory($dp.$shared.$circularReferenceManagerFactory.apply(null, args)($dp.$JsNet.Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin)),"Id":"","UserName":""};obj.constructor=_alias0.User; return obj; };
_alias3.IdentityRole = _alias3.IdentityRole || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"Users":$dp.$shared.$arrayFactory($dp.$shared.$circularReferenceManagerFactory.apply(null, args)($dp.$JsNet.Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole)),"Id":"","Name":""};obj.constructor=_alias3.IdentityRole; return obj; };
_alias0.DBContext = _alias0.DBContext || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"todos":$dp.$shared.$arrayFactory($dp.$shared.$circularReferenceManagerFactory.apply(null, args)(_alias0.todoItem)),"Users":$dp.$shared.$arrayFactory($dp.$shared.$circularReferenceManagerFactory.apply(null, args)(_alias0.User)),"Roles":$dp.$shared.$arrayFactory($dp.$shared.$circularReferenceManagerFactory.apply(null, args)($dp.$JsNet.Microsoft.AspNet.Identity.EntityFramework.IdentityRole)),"RequireUniqueEmail":false,"Database":{},"ChangeTracker":{},"Configuration":{}};obj.constructor=_alias0.DBContext; return obj; };
//#endregion
//#region 'Enum'
//#endregion
//#region 'UrlSet'
window.$dp = window.$dp || {};
$dp.$JsNet = $dp.$JsNet || {};
$dp.$JsNet.$UrlSet = {"$apiAccount":{"GetUserInfo": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'GetUserInfo'; action.$Names.controller = 'Account'; action.$Names.area  = '';action.$Params = function(){  var obj = null; return obj; };action.$Return = function(){  var obj = _alias0.UserInfoViewModel(); return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$httpMethodArray = {$get:"get",$items:["get"],$single:"get",$first:"get"};action.$IsApi = true;action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:action.$httpMethodArray.$first,data:action.$Params()}; return obj; };action.$RouteTemplate = 'UserInfo';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"Logout": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'Logout'; action.$Names.controller = 'Account'; action.$Names.area  = '';action.$Params = function(){  var obj = null; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$IsApi = true;action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:action.$httpMethodArray.$first,data:action.$Params()}; return obj; };action.$RouteTemplate = 'Logout';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"GetManageInfo": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'GetManageInfo'; action.$Names.controller = 'Account'; action.$Names.area  = '';action.$Params = function(){  var obj = {"returnUrl":"","generateState":false}; return obj; };action.$Return = function(){  var obj = _alias0.ManageInfoViewModel(); return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$httpMethodArray = {$get:"get",$items:["get"],$single:"get",$first:"get"};action.$IsApi = true;action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:action.$httpMethodArray.$first,data:action.$Params()}; return obj; };action.$RouteTemplate = 'ManageInfo';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"ChangePassword": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'ChangePassword'; action.$Names.controller = 'Account'; action.$Names.area  = '';action.$Params = function(){  var obj = {"model":_alias0.ChangePasswordBindingModel()}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$IsApi = true;action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:action.$httpMethodArray.$first,data:action.$Params()}; return obj; };action.$RouteTemplate = 'ChangePassword';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"SetPassword": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'SetPassword'; action.$Names.controller = 'Account'; action.$Names.area  = '';action.$Params = function(){  var obj = {"model":_alias0.SetPasswordBindingModel()}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$IsApi = true;action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:action.$httpMethodArray.$first,data:action.$Params()}; return obj; };action.$RouteTemplate = 'SetPassword';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"AddExternalLogin": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'AddExternalLogin'; action.$Names.controller = 'Account'; action.$Names.area  = '';action.$Params = function(){  var obj = {"model":_alias0.AddExternalLoginBindingModel()}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$IsApi = true;action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:action.$httpMethodArray.$first,data:action.$Params()}; return obj; };action.$RouteTemplate = 'AddExternalLogin';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"RemoveLogin": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'RemoveLogin'; action.$Names.controller = 'Account'; action.$Names.area  = '';action.$Params = function(){  var obj = {"model":_alias0.RemoveLoginBindingModel()}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$IsApi = true;action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:action.$httpMethodArray.$first,data:action.$Params()}; return obj; };action.$RouteTemplate = 'RemoveLogin';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"GetExternalLogin": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'GetExternalLogin'; action.$Names.controller = 'Account'; action.$Names.area  = '';action.$Params = function(){  var obj = {"provider":"","error":""}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$httpMethodArray = {$get:"get",$items:["get"],$single:"get",$first:"get"};action.$IsApi = true;action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:action.$httpMethodArray.$first,data:action.$Params()}; return obj; };action.$RouteTemplate = 'ExternalLogin';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"GetExternalLogins": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'GetExternalLogins'; action.$Names.controller = 'Account'; action.$Names.area  = '';action.$Params = function(){  var obj = {"returnUrl":"","generateState":false}; return obj; };action.$Return = function(){  var obj = $dp.$shared.$arrayFactory(_alias0.ExternalLoginViewModel()); return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$httpMethodArray = {$get:"get",$items:["get"],$single:"get",$first:"get"};action.$IsApi = true;action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:action.$httpMethodArray.$first,data:action.$Params()}; return obj; };action.$RouteTemplate = 'ExternalLogins';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"Register": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'Register'; action.$Names.controller = 'Account'; action.$Names.area  = '';action.$Params = function(){  var obj = {"model":_alias0.RegisterBindingModel()}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$IsApi = true;action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:action.$httpMethodArray.$first,data:action.$Params()}; return obj; };action.$RouteTemplate = 'Register';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"RegisterExternal": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'RegisterExternal'; action.$Names.controller = 'Account'; action.$Names.area  = '';action.$Params = function(){  var obj = {"model":_alias0.RegisterExternalBindingModel()}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$IsApi = true;action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:action.$httpMethodArray.$first,data:action.$Params()}; return obj; };action.$RouteTemplate = 'RegisterExternal';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }()},
"App":{"Register": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'Register'; action.$Names.controller = 'App'; action.$Names.area  = '';action.$Params = function(){  var obj = null; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"text",contentType:"application/json",cache:false,method:POST,data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"SignIn": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'SignIn'; action.$Names.controller = 'App'; action.$Names.area  = '';action.$Params = function(){  var obj = null; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"text",contentType:"application/json",cache:false,method:POST,data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"Home": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'Home'; action.$Names.controller = 'App'; action.$Names.area  = '';action.$Params = function(){  var obj = null; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"text",contentType:"application/json",cache:false,method:POST,data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"TodoManager": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'TodoManager'; action.$Names.controller = 'App'; action.$Names.area  = '';action.$Params = function(){  var obj = null; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"text",contentType:"application/json",cache:false,method:POST,data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }()},
"Main":{"Index": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'Index'; action.$Names.controller = 'Main'; action.$Names.area  = '';action.$Params = function(){  var obj = null; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"text",contentType:"application/json",cache:false,method:POST,data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }()},
"$apiWS_Account":{"GetCurrentUserName": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'GetCurrentUserName'; action.$Names.controller = 'WS_Account'; action.$Names.area  = '';action.$Params = function(){  var obj = null; return obj; };action.$Return = function(){  var obj = ""; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$httpMethodArray = {$get:"get",$items:["get"],$single:"get",$first:"get"};action.$IsApi = true;action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:action.$httpMethodArray.$first,data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"GetIsLoggedIn": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'GetIsLoggedIn'; action.$Names.controller = 'WS_Account'; action.$Names.area  = '';action.$Params = function(){  var obj = null; return obj; };action.$Return = function(){  var obj = false; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$httpMethodArray = {$get:"get",$items:["get"],$single:"get",$first:"get"};action.$IsApi = true;action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:action.$httpMethodArray.$first,data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"GetCurrentUserRoles": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'GetCurrentUserRoles'; action.$Names.controller = 'WS_Account'; action.$Names.area  = '';action.$Params = function(){  var obj = null; return obj; };action.$Return = function(){  var obj = $dp.$shared.$arrayFactory($dp.$JsNet.System.String()); return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$httpMethodArray = {$get:"get",$items:["get"],$single:"get",$first:"get"};action.$IsApi = true;action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:action.$httpMethodArray.$first,data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }()},
"$apiWS_Todo":{"GetUserTodoItems": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'GetUserTodoItems'; action.$Names.controller = 'WS_Todo'; action.$Names.area  = '';action.$Params = function(){  var obj = null; return obj; };action.$Return = function(){  var obj = $dp.$shared.$arrayFactory(_alias0.todoItem()); return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$httpMethodArray = {$get:"get",$items:["get"],$single:"get",$first:"get"};action.$IsApi = true;action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:action.$httpMethodArray.$first,data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"PostTodoItem": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'PostTodoItem'; action.$Names.controller = 'WS_Todo'; action.$Names.area  = '';action.$Params = function(){  var obj = {"item":_alias0.TodoItemViewModel()}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$httpMethodArray = {$post:"post",$items:["post"],$single:"post",$first:"post"};action.$IsApi = true;action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:action.$httpMethodArray.$first,data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"CompleteTodoItem": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'CompleteTodoItem'; action.$Names.controller = 'WS_Todo'; action.$Names.area  = '';action.$Params = function(){  var obj = {"id":0}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$httpMethodArray = {$post:"post",$items:["post"],$single:"post",$first:"post"};action.$IsApi = true;action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:action.$httpMethodArray.$first,data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"DeleteTodoItem": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'DeleteTodoItem'; action.$Names.controller = 'WS_Todo'; action.$Names.area  = '';action.$Params = function(){  var obj = {"id":0}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$httpMethodArray = {$post:"post",$items:["post"],$single:"post",$first:"post"};action.$IsApi = true;action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:action.$httpMethodArray.$first,data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }()}};
//-- alias
window.$dpUrlSet = $dp.$JsNet.$UrlSet;
window.$dpLib = $dp.$JsNet;
//#endregion
})();
})();
})();
