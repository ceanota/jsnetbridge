(function () {
(function () {
(function () {
    var message = '[circularReferenceManagerFactory.js] or [arrayFactory.js] or [actionHelper.js] is missing';
    try {
        if (!window.$dp.$shared.$arrayFactory) { throw message; };
        if (!window.$dp.$shared.$circularReferenceManagerFactory) { throw message };
        if (!window.$dp.$JsNet.$Helpers.$Shared.$Action.getUrlFromTemplate) { throw message };
    } catch (e) {
        message = message + '\r\n' + e.toString();
        throw message;
    }
})();
var _stampFunc = function() { return $dp.$JsNet; };
(function () {
//#region 'Model'
window.$dp = window.$dp || {};
$dp.$JsNet = $dp.$JsNet || {};
$dp.$JsNet.SingleApp2 = $dp.$JsNet.SingleApp2 || {};
$dp.$JsNet.SingleApp2.Areas = $dp.$JsNet.SingleApp2.Areas || {};
$dp.$JsNet.SingleApp2.Areas.HelpPage = $dp.$JsNet.SingleApp2.Areas.HelpPage || {};
$dp.$JsNet.SingleApp2.Areas.HelpPage.ModelDescriptions = $dp.$JsNet.SingleApp2.Areas.HelpPage.ModelDescriptions || {};
$dp.$JsNet.SingleApp2.Models = $dp.$JsNet.SingleApp2.Models || {};
$dp.$JsNet.Microsoft = $dp.$JsNet.Microsoft || {};
$dp.$JsNet.Microsoft.AspNet = $dp.$JsNet.Microsoft.AspNet || {};
$dp.$JsNet.Microsoft.AspNet.Identity = $dp.$JsNet.Microsoft.AspNet.Identity || {};
$dp.$JsNet.Microsoft.AspNet.Identity.EntityFramework = $dp.$JsNet.Microsoft.AspNet.Identity.EntityFramework || {};
$dp.$JsNet.Microsoft.Owin = $dp.$JsNet.Microsoft.Owin || {};
$dp.$JsNet.Microsoft.Owin.Security = $dp.$JsNet.Microsoft.Owin.Security || {};
$dp.$JsNet.SingleApp2.Areas.HelpPage.Models = $dp.$JsNet.SingleApp2.Areas.HelpPage.Models || {};
var _alias6 = $dp.$JsNet.SingleApp2.Areas.HelpPage.ModelDescriptions;
var _alias1 = $dp.$JsNet.SingleApp2.Models;
var _alias7 = $dp.$JsNet.Microsoft.AspNet.Identity.EntityFramework;
var _alias8 = $dp.$JsNet.Microsoft.AspNet.Identity;
var _alias9 = $dp.$JsNet.Microsoft.Owin.Security;
var _alias0 = $dp.$JsNet.SingleApp2.Areas.HelpPage.Models;
_alias6.ParameterAnnotation = _alias6.ParameterAnnotation || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"Documentation":"","AnnotationAttribute":{}};obj.constructor=_alias6.ParameterAnnotation; return obj; };
_alias6.ModelDescription = _alias6.ModelDescription || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"Documentation":"","Name":"","ModelType":{}};obj.constructor=_alias6.ModelDescription; return obj; };
_alias1.ExternalLoginConfirmationViewModel = _alias1.ExternalLoginConfirmationViewModel || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"Email":"","Hometown":""};obj.constructor=_alias1.ExternalLoginConfirmationViewModel; return obj; };
_alias1.ExternalLoginListViewModel = _alias1.ExternalLoginListViewModel || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"ReturnUrl":""};obj.constructor=_alias1.ExternalLoginListViewModel; return obj; };
_alias1.SendCodeViewModel = _alias1.SendCodeViewModel || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"SelectedProvider":"","ReturnUrl":"","RememberMe":false,"Providers":$dp.$shared.$arrayFactory({})};obj.constructor=_alias1.SendCodeViewModel; return obj; };
_alias1.VerifyCodeViewModel = _alias1.VerifyCodeViewModel || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"Provider":"","Code":"","ReturnUrl":"","RememberBrowser":false,"RememberMe":false};obj.constructor=_alias1.VerifyCodeViewModel; return obj; };
_alias1.ForgotViewModel = _alias1.ForgotViewModel || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"Email":""};obj.constructor=_alias1.ForgotViewModel; return obj; };
_alias1.LoginViewModel = _alias1.LoginViewModel || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"Email":"","Password":"","RememberMe":false};obj.constructor=_alias1.LoginViewModel; return obj; };
_alias1.RegisterViewModel = _alias1.RegisterViewModel || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"Email":"","Password":"","ConfirmPassword":"","Hometown":""};obj.constructor=_alias1.RegisterViewModel; return obj; };
_alias1.ResetPasswordViewModel = _alias1.ResetPasswordViewModel || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"Email":"","Password":"","ConfirmPassword":"","Code":""};obj.constructor=_alias1.ResetPasswordViewModel; return obj; };
_alias1.ForgotPasswordViewModel = _alias1.ForgotPasswordViewModel || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"Email":""};obj.constructor=_alias1.ForgotPasswordViewModel; return obj; };
_alias7.IdentityUserRole = _alias7.IdentityUserRole || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"UserId":"","RoleId":""};obj.constructor=_alias7.IdentityUserRole; return obj; };
_alias7.IdentityUserClaim = _alias7.IdentityUserClaim || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"Id":0,"UserId":"","ClaimType":"","ClaimValue":""};obj.constructor=_alias7.IdentityUserClaim; return obj; };
_alias7.IdentityUserLogin = _alias7.IdentityUserLogin || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"LoginProvider":"","ProviderKey":"","UserId":""};obj.constructor=_alias7.IdentityUserLogin; return obj; };
_alias8.UserLoginInfo = _alias8.UserLoginInfo || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"LoginProvider":"","ProviderKey":""};obj.constructor=_alias8.UserLoginInfo; return obj; };
_alias9.AuthenticationDescription = _alias9.AuthenticationDescription || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"Properties":$dp.$shared.$arrayFactory(""),"AuthenticationType":"","Caption":""};obj.constructor=_alias9.AuthenticationDescription; return obj; };
_alias1.FactorViewModel = _alias1.FactorViewModel || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"Purpose":""};obj.constructor=_alias1.FactorViewModel; return obj; };
_alias1.SetPasswordViewModel = _alias1.SetPasswordViewModel || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"NewPassword":"","ConfirmPassword":""};obj.constructor=_alias1.SetPasswordViewModel; return obj; };
_alias1.ChangePasswordViewModel = _alias1.ChangePasswordViewModel || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"OldPassword":"","NewPassword":"","ConfirmPassword":""};obj.constructor=_alias1.ChangePasswordViewModel; return obj; };
_alias1.AddPhoneNumberViewModel = _alias1.AddPhoneNumberViewModel || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"Number":""};obj.constructor=_alias1.AddPhoneNumberViewModel; return obj; };
_alias1.VerifyPhoneNumberViewModel = _alias1.VerifyPhoneNumberViewModel || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"Code":"","PhoneNumber":""};obj.constructor=_alias1.VerifyPhoneNumberViewModel; return obj; };
_alias1.ConfigureTwoFactorViewModel = _alias1.ConfigureTwoFactorViewModel || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"SelectedProvider":"","Providers":$dp.$shared.$arrayFactory({})};obj.constructor=_alias1.ConfigureTwoFactorViewModel; return obj; };
_alias1.GetViewModel = _alias1.GetViewModel || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"Hometown":""};obj.constructor=_alias1.GetViewModel; return obj; };
_alias6.ParameterDescription = _alias6.ParameterDescription || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"Annotations":$dp.$shared.$arrayFactory($dp.$shared.$circularReferenceManagerFactory.apply(null, args)($dp.$JsNet.SingleApp2.Areas.HelpPage.ModelDescriptions.ParameterAnnotation)),"Documentation":"","Name":"","TypeDescription":$dp.$shared.$circularReferenceManagerFactory.apply(null, args)($dp.$JsNet.SingleApp2.Areas.HelpPage.ModelDescriptions.ModelDescription)};obj.constructor=_alias6.ParameterDescription; return obj; };
_alias1.ApplicationUser = _alias1.ApplicationUser || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"Hometown":"","Email":"","EmailConfirmed":false,"PasswordHash":"","SecurityStamp":"","PhoneNumber":"","PhoneNumberConfirmed":false,"TwoFactorEnabled":false,"LockoutEndDateUtc":new Date(),"LockoutEnabled":false,"AccessFailedCount":0,"Roles":$dp.$shared.$arrayFactory($dp.$shared.$circularReferenceManagerFactory.apply(null, args)($dp.$JsNet.Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole)),"Claims":$dp.$shared.$arrayFactory($dp.$shared.$circularReferenceManagerFactory.apply(null, args)($dp.$JsNet.Microsoft.AspNet.Identity.EntityFramework.IdentityUserClaim)),"Logins":$dp.$shared.$arrayFactory($dp.$shared.$circularReferenceManagerFactory.apply(null, args)($dp.$JsNet.Microsoft.AspNet.Identity.EntityFramework.IdentityUserLogin)),"Id":"","UserName":""};obj.constructor=_alias1.ApplicationUser; return obj; };
_alias7.IdentityRole = _alias7.IdentityRole || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"Users":$dp.$shared.$arrayFactory($dp.$shared.$circularReferenceManagerFactory.apply(null, args)($dp.$JsNet.Microsoft.AspNet.Identity.EntityFramework.IdentityUserRole)),"Id":"","Name":""};obj.constructor=_alias7.IdentityRole; return obj; };
_alias1.IndexViewModel = _alias1.IndexViewModel || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"HasPassword":false,"Logins":$dp.$shared.$arrayFactory($dp.$shared.$circularReferenceManagerFactory.apply(null, args)($dp.$JsNet.Microsoft.AspNet.Identity.UserLoginInfo)),"PhoneNumber":"","TwoFactor":false,"BrowserRemembered":false};obj.constructor=_alias1.IndexViewModel; return obj; };
_alias1.ManageLoginsViewModel = _alias1.ManageLoginsViewModel || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"CurrentLogins":$dp.$shared.$arrayFactory($dp.$shared.$circularReferenceManagerFactory.apply(null, args)($dp.$JsNet.Microsoft.AspNet.Identity.UserLoginInfo)),"OtherLogins":$dp.$shared.$arrayFactory($dp.$shared.$circularReferenceManagerFactory.apply(null, args)($dp.$JsNet.Microsoft.Owin.Security.AuthenticationDescription))};obj.constructor=_alias1.ManageLoginsViewModel; return obj; };
_alias0.HelpPageApiModel = _alias0.HelpPageApiModel || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"UriParameters":$dp.$shared.$arrayFactory($dp.$shared.$circularReferenceManagerFactory.apply(null, args)($dp.$JsNet.SingleApp2.Areas.HelpPage.ModelDescriptions.ParameterDescription)),"RequestDocumentation":"","RequestModelDescription":$dp.$shared.$circularReferenceManagerFactory.apply(null, args)($dp.$JsNet.SingleApp2.Areas.HelpPage.ModelDescriptions.ModelDescription),"RequestBodyParameters":$dp.$shared.$arrayFactory($dp.$shared.$circularReferenceManagerFactory.apply(null, args)($dp.$JsNet.SingleApp2.Areas.HelpPage.ModelDescriptions.ParameterDescription)),"ResourceDescription":$dp.$shared.$circularReferenceManagerFactory.apply(null, args)($dp.$JsNet.SingleApp2.Areas.HelpPage.ModelDescriptions.ModelDescription),"ResourceProperties":$dp.$shared.$arrayFactory($dp.$shared.$circularReferenceManagerFactory.apply(null, args)($dp.$JsNet.SingleApp2.Areas.HelpPage.ModelDescriptions.ParameterDescription)),"ErrorMessages":$dp.$shared.$arrayFactory(""),"ApiDescription":{},"SampleRequests":$dp.$shared.$arrayFactory({}),"SampleResponses":$dp.$shared.$arrayFactory({})};obj.constructor=_alias0.HelpPageApiModel; return obj; };
_alias1.ApplicationDbContext = _alias1.ApplicationDbContext || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"Users":$dp.$shared.$arrayFactory($dp.$shared.$circularReferenceManagerFactory.apply(null, args)(_alias1.ApplicationUser)),"Roles":$dp.$shared.$arrayFactory($dp.$shared.$circularReferenceManagerFactory.apply(null, args)($dp.$JsNet.Microsoft.AspNet.Identity.EntityFramework.IdentityRole)),"RequireUniqueEmail":false,"Database":{},"ChangeTracker":{},"Configuration":{}};obj.constructor=_alias1.ApplicationDbContext; return obj; };
//#endregion
//#region 'Enum'
window.$dp = window.$dp || {};
$dp.$JsNet = $dp.$JsNet || {};
$dp.$JsNet.SingleApp2 = $dp.$JsNet.SingleApp2 || {};
$dp.$JsNet.SingleApp2.Areas = $dp.$JsNet.SingleApp2.Areas || {};
$dp.$JsNet.SingleApp2.Areas.HelpPage = $dp.$JsNet.SingleApp2.Areas.HelpPage || {};
$dp.$JsNet.SingleApp2.Controllers = $dp.$JsNet.SingleApp2.Controllers || {};
$dp.$JsNet.SingleApp2.Controllers.$JsNs$_ManageController = $dp.$JsNet.SingleApp2.Controllers.$JsNs$_ManageController || {};
var _alias2 = $dp.$JsNet.SingleApp2.Areas.HelpPage;
var _alias3 = $dp.$JsNet.SingleApp2.Controllers.$JsNs$_ManageController;
_alias2.SampleDirection = _alias2.SampleDirection || {"Request":{ "$Key":"Request","$Value":0 },"Response":{ "$Key":"Response","$Value":1 }};
_alias3.ManageMessageId = _alias3.ManageMessageId || {"AddPhoneSuccess":{ "$Key":"AddPhoneSuccess","$Value":0 },"ChangePasswordSuccess":{ "$Key":"ChangePasswordSuccess","$Value":1 },"SetTwoFactorSuccess":{ "$Key":"SetTwoFactorSuccess","$Value":2 },"SetPasswordSuccess":{ "$Key":"SetPasswordSuccess","$Value":3 },"RemoveLoginSuccess":{ "$Key":"RemoveLoginSuccess","$Value":4 },"RemovePhoneSuccess":{ "$Key":"RemovePhoneSuccess","$Value":5 },"Error":{ "$Key":"Error","$Value":6 }};
//#endregion
//#region 'UrlSet'
window.$dp = window.$dp || {};
$dp.$JsNet = $dp.$JsNet || {};
$dp.$JsNet.$UrlSet = {"HelpPage":{"Help":{"Index": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'Index'; action.$Names.controller = 'Help'; action.$Names.area  = 'HelpPage';action.$Params = function(){  var obj = null; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:'POST',data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"Api": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'Api'; action.$Names.controller = 'Help'; action.$Names.area  = 'HelpPage';action.$Params = function(){  var obj = {"apiId":""}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:'POST',data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"ResourceModel": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'ResourceModel'; action.$Names.controller = 'Help'; action.$Names.area  = 'HelpPage';action.$Params = function(){  var obj = {"modelName":""}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:'POST',data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }()}},
"Account":{"Authorize": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'Authorize'; action.$Names.controller = 'Account'; action.$Names.area  = '';action.$Params = function(){  var obj = null; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:'POST',data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"Login": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'Login'; action.$Names.controller = 'Account'; action.$Names.area  = '';action.$Params = function(){  var obj = {"returnUrl":""}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:'POST',data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();obj.$action1 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'Login'; action.$Names.controller = 'Account'; action.$Names.area  = '';action.$Params = function(){  var obj = {"model":_alias1.LoginViewModel(),"returnUrl":""}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:'POST',data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"VerifyCode": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'VerifyCode'; action.$Names.controller = 'Account'; action.$Names.area  = '';action.$Params = function(){  var obj = {"provider":"","returnUrl":"","rememberMe":false}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:'POST',data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();obj.$action1 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'VerifyCode'; action.$Names.controller = 'Account'; action.$Names.area  = '';action.$Params = function(){  var obj = {"model":_alias1.VerifyCodeViewModel()}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:'POST',data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"Register": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'Register'; action.$Names.controller = 'Account'; action.$Names.area  = '';action.$Params = function(){  var obj = null; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:'POST',data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();obj.$action1 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'Register'; action.$Names.controller = 'Account'; action.$Names.area  = '';action.$Params = function(){  var obj = {"model":_alias1.RegisterViewModel()}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:'POST',data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"ConfirmEmail": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'ConfirmEmail'; action.$Names.controller = 'Account'; action.$Names.area  = '';action.$Params = function(){  var obj = {"userId":"","code":""}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:'POST',data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"ForgotPassword": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'ForgotPassword'; action.$Names.controller = 'Account'; action.$Names.area  = '';action.$Params = function(){  var obj = null; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:'POST',data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();obj.$action1 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'ForgotPassword'; action.$Names.controller = 'Account'; action.$Names.area  = '';action.$Params = function(){  var obj = {"model":_alias1.ForgotPasswordViewModel()}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:'POST',data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"ForgotPasswordConfirmation": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'ForgotPasswordConfirmation'; action.$Names.controller = 'Account'; action.$Names.area  = '';action.$Params = function(){  var obj = null; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:'POST',data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"ResetPassword": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'ResetPassword'; action.$Names.controller = 'Account'; action.$Names.area  = '';action.$Params = function(){  var obj = {"code":""}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:'POST',data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();obj.$action1 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'ResetPassword'; action.$Names.controller = 'Account'; action.$Names.area  = '';action.$Params = function(){  var obj = {"model":_alias1.ResetPasswordViewModel()}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:'POST',data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"ResetPasswordConfirmation": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'ResetPasswordConfirmation'; action.$Names.controller = 'Account'; action.$Names.area  = '';action.$Params = function(){  var obj = null; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:'POST',data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"ExternalLogin": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'ExternalLogin'; action.$Names.controller = 'Account'; action.$Names.area  = '';action.$Params = function(){  var obj = {"provider":"","returnUrl":""}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:'POST',data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"SendCode": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'SendCode'; action.$Names.controller = 'Account'; action.$Names.area  = '';action.$Params = function(){  var obj = {"returnUrl":"","rememberMe":false}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:'POST',data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();obj.$action1 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'SendCode'; action.$Names.controller = 'Account'; action.$Names.area  = '';action.$Params = function(){  var obj = {"model":_alias1.SendCodeViewModel()}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:'POST',data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"ExternalLoginCallback": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'ExternalLoginCallback'; action.$Names.controller = 'Account'; action.$Names.area  = '';action.$Params = function(){  var obj = {"returnUrl":""}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:'POST',data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"ExternalLoginConfirmation": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'ExternalLoginConfirmation'; action.$Names.controller = 'Account'; action.$Names.area  = '';action.$Params = function(){  var obj = {"model":_alias1.ExternalLoginConfirmationViewModel(),"returnUrl":""}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:'POST',data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"LogOff": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'LogOff'; action.$Names.controller = 'Account'; action.$Names.area  = '';action.$Params = function(){  var obj = null; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:'POST',data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"ExternalLoginFailure": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'ExternalLoginFailure'; action.$Names.controller = 'Account'; action.$Names.area  = '';action.$Params = function(){  var obj = null; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:'POST',data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }()},
"Home":{"Index": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'Index'; action.$Names.controller = 'Home'; action.$Names.area  = '';action.$Params = function(){  var obj = null; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:'POST',data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }()},
"Manage":{"Index": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'Index'; action.$Names.controller = 'Manage'; action.$Names.area  = '';action.$Params = function(){  var obj = {"message":0}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = {"message":_alias3.ManageMessageId}; return obj; };action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:'POST',data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"RemoveLogin": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'RemoveLogin'; action.$Names.controller = 'Manage'; action.$Names.area  = '';action.$Params = function(){  var obj = {"loginProvider":"","providerKey":""}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:'POST',data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"AddPhoneNumber": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'AddPhoneNumber'; action.$Names.controller = 'Manage'; action.$Names.area  = '';action.$Params = function(){  var obj = null; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:'POST',data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();obj.$action1 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'AddPhoneNumber'; action.$Names.controller = 'Manage'; action.$Names.area  = '';action.$Params = function(){  var obj = {"model":_alias1.AddPhoneNumberViewModel()}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:'POST',data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"EnableTwoFactorAuthentication": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'EnableTwoFactorAuthentication'; action.$Names.controller = 'Manage'; action.$Names.area  = '';action.$Params = function(){  var obj = null; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:'POST',data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"DisableTwoFactorAuthentication": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'DisableTwoFactorAuthentication'; action.$Names.controller = 'Manage'; action.$Names.area  = '';action.$Params = function(){  var obj = null; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:'POST',data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"VerifyPhoneNumber": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'VerifyPhoneNumber'; action.$Names.controller = 'Manage'; action.$Names.area  = '';action.$Params = function(){  var obj = {"phoneNumber":""}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:'POST',data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();obj.$action1 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'VerifyPhoneNumber'; action.$Names.controller = 'Manage'; action.$Names.area  = '';action.$Params = function(){  var obj = {"model":_alias1.VerifyPhoneNumberViewModel()}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:'POST',data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"RemovePhoneNumber": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'RemovePhoneNumber'; action.$Names.controller = 'Manage'; action.$Names.area  = '';action.$Params = function(){  var obj = null; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:'POST',data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"ChangePassword": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'ChangePassword'; action.$Names.controller = 'Manage'; action.$Names.area  = '';action.$Params = function(){  var obj = null; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:'POST',data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();obj.$action1 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'ChangePassword'; action.$Names.controller = 'Manage'; action.$Names.area  = '';action.$Params = function(){  var obj = {"model":_alias1.ChangePasswordViewModel()}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:'POST',data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"SetPassword": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'SetPassword'; action.$Names.controller = 'Manage'; action.$Names.area  = '';action.$Params = function(){  var obj = null; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:'POST',data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();obj.$action1 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'SetPassword'; action.$Names.controller = 'Manage'; action.$Names.area  = '';action.$Params = function(){  var obj = {"model":_alias1.SetPasswordViewModel()}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:'POST',data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"ManageLogins": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'ManageLogins'; action.$Names.controller = 'Manage'; action.$Names.area  = '';action.$Params = function(){  var obj = {"message":0}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = {"message":_alias3.ManageMessageId}; return obj; };action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:'POST',data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"LinkLogin": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'LinkLogin'; action.$Names.controller = 'Manage'; action.$Names.area  = '';action.$Params = function(){  var obj = {"provider":""}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:'POST',data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"LinkLoginCallback": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'LinkLoginCallback'; action.$Names.controller = 'Manage'; action.$Names.area  = '';action.$Params = function(){  var obj = null; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:'POST',data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }()},
"$apiMe":{"Get": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = $dp.$JsNet.$Helpers.$Shared.$Action.$ActionFactory();action.$Names.action = 'Get'; action.$Names.controller = 'Me'; action.$Names.area  = '';action.$Params = function(){  var obj = null; return obj; };action.$Return = function(){  var obj = _alias1.GetViewModel(); return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$httpMethodArray = {$get:"get",$items:["get"],$single:"get",$first:"get"};action.$IsApi = true;action.$AjaxSettings = function(){  var obj = {url:action.$GetUrl(),dataType:"json",contentType:"application/json",cache:false,method:action.$httpMethodArray.$first,data:action.$Params()}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }()}};
//-- alias
window.$dpUrlSet = $dp.$JsNet.$UrlSet;
window.$dpLib = $dp.$JsNet;
//#endregion
})();
})();
})();
