(function () {
(function () {
(function () {
    var message = '[circularReferenceManagerFactory.js] or [arrayFactory.js] or [getUrlFromTemplate.js] is missing';
    try {
        if (!window.$dp.$shared.$arrayFactory) { throw message; };
        if (!window.$dp.$shared.$circularReferenceManagerFactory) { throw message };
        if (!window.$dp.$JsNet.$Helpers.$Shared.$Action.getUrlFromTemplate) { throw message };
    } catch (e) {
        message = message + '\r\n' + e.toString();
        throw message;
    }
})();
var _stampFunc = function() { return $dp.$JsNet; };
(function () {
//#region 'Model'
window.$dp = window.$dp || {};
$dp.$JsNet = $dp.$JsNet || {};
$dp.$JsNet.SingleAppExample = $dp.$JsNet.SingleAppExample || {};
$dp.$JsNet.SingleAppExample.Areas = $dp.$JsNet.SingleAppExample.Areas || {};
$dp.$JsNet.SingleAppExample.Areas.HelpPage = $dp.$JsNet.SingleAppExample.Areas.HelpPage || {};
$dp.$JsNet.SingleAppExample.Areas.HelpPage.Models = $dp.$JsNet.SingleAppExample.Areas.HelpPage.Models || {};
$dp.$JsNet.SingleAppExample.Models = $dp.$JsNet.SingleAppExample.Models || {};
$dp.$JsNet.SingleAppExample.Controllers = $dp.$JsNet.SingleAppExample.Controllers || {};
var _alias0 = $dp.$JsNet.SingleAppExample.Areas.HelpPage.Models;
var _alias1 = $dp.$JsNet.SingleAppExample.Models;
var _alias2 = $dp.$JsNet.SingleAppExample.Controllers;
_alias0.HelpPageApiModel = _alias0.HelpPageApiModel || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"ErrorMessages":$dp.$shared.$arrayFactory(""),"ApiDescription":{},"SampleRequests":$dp.$shared.$arrayFactory({}),"SampleResponses":$dp.$shared.$arrayFactory({})};obj.constructor=_alias0.HelpPageApiModel; return obj; };
_alias1.UserProfile = _alias1.UserProfile || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"UserId":0,"UserName":""};obj.constructor=_alias1.UserProfile; return obj; };
_alias1.RegisterExternalLoginModel = _alias1.RegisterExternalLoginModel || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"UserName":"","ExternalLoginData":""};obj.constructor=_alias1.RegisterExternalLoginModel; return obj; };
_alias1.LocalPasswordModel = _alias1.LocalPasswordModel || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"OldPassword":"","NewPassword":"","ConfirmPassword":""};obj.constructor=_alias1.LocalPasswordModel; return obj; };
_alias1.LoginModel = _alias1.LoginModel || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"UserName":"","Password":"","RememberMe":false};obj.constructor=_alias1.LoginModel; return obj; };
_alias1.RegisterModel = _alias1.RegisterModel || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"UserName":"","Password":"","ConfirmPassword":""};obj.constructor=_alias1.RegisterModel; return obj; };
_alias1.ExternalLogin = _alias1.ExternalLogin || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"Provider":"","ProviderDisplayName":"","ProviderUserId":""};obj.constructor=_alias1.ExternalLogin; return obj; };
_alias1.TodoItemDto = _alias1.TodoItemDto || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"TodoItemId":0,"Title":"","IsDone":false,"TodoListId":0};obj.constructor=_alias1.TodoItemDto; return obj; };
_alias1.TodoList = _alias1.TodoList || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"TodoListId":0,"UserId":"","Title":"","Todos":$dp.$shared.$arrayFactory($dp.$shared.$circularReferenceManagerFactory.apply(null, args)(_alias1.TodoItem))};obj.constructor=_alias1.TodoList; return obj; };
_alias1.TodoItem = _alias1.TodoItem || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"TodoItemId":0,"Title":"","IsDone":false,"TodoListId":0,"TodoList":$dp.$shared.$circularReferenceManagerFactory.apply(null, args)(_alias1.TodoList)};obj.constructor=_alias1.TodoItem; return obj; };
_alias2.Personnage = _alias2.Personnage || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"Nom":""};obj.constructor=_alias2.Personnage; return obj; };
_alias1.TodoListDto = _alias1.TodoListDto || function(){ var args = Array.prototype.slice.call(arguments); var obj = {"TodoListId":0,"UserId":"","Title":"","Todos":$dp.$shared.$arrayFactory($dp.$shared.$circularReferenceManagerFactory.apply(null, args)(_alias1.TodoItemDto))};obj.constructor=_alias1.TodoListDto; return obj; };
//#endregion
//#region 'Enum'
window.$dp = window.$dp || {};
$dp.$JsNet = $dp.$JsNet || {};
$dp.$JsNet.SingleAppExample = $dp.$JsNet.SingleAppExample || {};
$dp.$JsNet.SingleAppExample.Areas = $dp.$JsNet.SingleAppExample.Areas || {};
$dp.$JsNet.SingleAppExample.Areas.HelpPage = $dp.$JsNet.SingleAppExample.Areas.HelpPage || {};
$dp.$JsNet.SingleAppExample.Controllers = $dp.$JsNet.SingleAppExample.Controllers || {};
$dp.$JsNet.SingleAppExample.Controllers.$JsNs$_AccountController = $dp.$JsNet.SingleAppExample.Controllers.$JsNs$_AccountController || {};
var _alias3 = $dp.$JsNet.SingleAppExample.Areas.HelpPage;
var _alias4 = $dp.$JsNet.SingleAppExample.Controllers.$JsNs$_AccountController;
_alias3.SampleDirection = _alias3.SampleDirection || {"Request":{ "$Key":"Request","$Value":0 },"Response":{ "$Key":"Response","$Value":1 }};
_alias4.ManageMessageId = _alias4.ManageMessageId || {"ChangePasswordSuccess":{ "$Key":"ChangePasswordSuccess","$Value":0 },"SetPasswordSuccess":{ "$Key":"SetPasswordSuccess","$Value":1 },"RemoveLoginSuccess":{ "$Key":"RemoveLoginSuccess","$Value":2 }};
//#endregion
//#region 'UrlSet'
window.$dp = window.$dp || {};
$dp.$JsNet = $dp.$JsNet || {};
$dp.$JsNet.$UrlSet = {"HelpPage":{"Help":{"Index": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = {};action.$_Url = null;action.$GetUrl = function (routeData) { var f = $dp.$JsNet.$Helpers.$Shared.$Action.getUrlFromTemplate; if(!routeData) { return action.$_Url || f(action); } else { return f(action, routeData); } };action.$Names = { action : "Index", controller : "Help", area : "HelpPage" };action.$Params = function(){  var obj = null; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$IsApi = null;action.$AjaxOptions = function(){  var obj = {dataType:"json",contentType:"application/json",cache:false,method:POST}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"Api": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = {};action.$_Url = null;action.$GetUrl = function (routeData) { var f = $dp.$JsNet.$Helpers.$Shared.$Action.getUrlFromTemplate; if(!routeData) { return action.$_Url || f(action); } else { return f(action, routeData); } };action.$Names = { action : "Api", controller : "Help", area : "HelpPage" };action.$Params = function(){  var obj = {"apiId":""}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$IsApi = null;action.$AjaxOptions = function(){  var obj = {dataType:"json",contentType:"application/json",cache:false,method:POST}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }()}},
"Account":{"JsonLogin": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = {};action.$_Url = null;action.$GetUrl = function (routeData) { var f = $dp.$JsNet.$Helpers.$Shared.$Action.getUrlFromTemplate; if(!routeData) { return action.$_Url || f(action); } else { return f(action, routeData); } };action.$Names = { action : "JsonLogin", controller : "Account", area : "" };action.$Params = function(){  var obj = {"model":_alias1.LoginModel(),"returnUrl":""}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$IsApi = null;action.$AjaxOptions = function(){  var obj = {dataType:"json",contentType:"application/json",cache:false,method:POST}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"LogOff": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = {};action.$_Url = null;action.$GetUrl = function (routeData) { var f = $dp.$JsNet.$Helpers.$Shared.$Action.getUrlFromTemplate; if(!routeData) { return action.$_Url || f(action); } else { return f(action, routeData); } };action.$Names = { action : "LogOff", controller : "Account", area : "" };action.$Params = function(){  var obj = null; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$IsApi = null;action.$AjaxOptions = function(){  var obj = {dataType:"json",contentType:"application/json",cache:false,method:POST}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"JsonRegister": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = {};action.$_Url = null;action.$GetUrl = function (routeData) { var f = $dp.$JsNet.$Helpers.$Shared.$Action.getUrlFromTemplate; if(!routeData) { return action.$_Url || f(action); } else { return f(action, routeData); } };action.$Names = { action : "JsonRegister", controller : "Account", area : "" };action.$Params = function(){  var obj = {"model":_alias1.RegisterModel(),"returnUrl":""}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$IsApi = null;action.$AjaxOptions = function(){  var obj = {dataType:"json",contentType:"application/json",cache:false,method:POST}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"Disassociate": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = {};action.$_Url = null;action.$GetUrl = function (routeData) { var f = $dp.$JsNet.$Helpers.$Shared.$Action.getUrlFromTemplate; if(!routeData) { return action.$_Url || f(action); } else { return f(action, routeData); } };action.$Names = { action : "Disassociate", controller : "Account", area : "" };action.$Params = function(){  var obj = {"provider":"","providerUserId":""}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$IsApi = null;action.$AjaxOptions = function(){  var obj = {dataType:"json",contentType:"application/json",cache:false,method:POST}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"Manage": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = {};action.$_Url = null;action.$GetUrl = function (routeData) { var f = $dp.$JsNet.$Helpers.$Shared.$Action.getUrlFromTemplate; if(!routeData) { return action.$_Url || f(action); } else { return f(action, routeData); } };action.$Names = { action : "Manage", controller : "Account", area : "" };action.$Params = function(){  var obj = {"message":0}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = {"message":_alias4.ManageMessageId}; return obj; };action.$IsApi = null;action.$AjaxOptions = function(){  var obj = {dataType:"json",contentType:"application/json",cache:false,method:POST}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();obj.$action1 = function actionFactory () { try { var action = {};action.$_Url = null;action.$GetUrl = function (routeData) { var f = $dp.$JsNet.$Helpers.$Shared.$Action.getUrlFromTemplate; if(!routeData) { return action.$_Url || f(action); } else { return f(action, routeData); } };action.$Names = { action : "Manage", controller : "Account", area : "" };action.$Params = function(){  var obj = {"model":_alias1.LocalPasswordModel()}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$IsApi = null;action.$AjaxOptions = function(){  var obj = {dataType:"json",contentType:"application/json",cache:false,method:POST}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"ExternalLogin": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = {};action.$_Url = null;action.$GetUrl = function (routeData) { var f = $dp.$JsNet.$Helpers.$Shared.$Action.getUrlFromTemplate; if(!routeData) { return action.$_Url || f(action); } else { return f(action, routeData); } };action.$Names = { action : "ExternalLogin", controller : "Account", area : "" };action.$Params = function(){  var obj = {"provider":"","returnUrl":""}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$IsApi = null;action.$AjaxOptions = function(){  var obj = {dataType:"json",contentType:"application/json",cache:false,method:POST}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"ExternalLoginCallback": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = {};action.$_Url = null;action.$GetUrl = function (routeData) { var f = $dp.$JsNet.$Helpers.$Shared.$Action.getUrlFromTemplate; if(!routeData) { return action.$_Url || f(action); } else { return f(action, routeData); } };action.$Names = { action : "ExternalLoginCallback", controller : "Account", area : "" };action.$Params = function(){  var obj = {"returnUrl":""}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$IsApi = null;action.$AjaxOptions = function(){  var obj = {dataType:"json",contentType:"application/json",cache:false,method:POST}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"ExternalLoginConfirmation": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = {};action.$_Url = null;action.$GetUrl = function (routeData) { var f = $dp.$JsNet.$Helpers.$Shared.$Action.getUrlFromTemplate; if(!routeData) { return action.$_Url || f(action); } else { return f(action, routeData); } };action.$Names = { action : "ExternalLoginConfirmation", controller : "Account", area : "" };action.$Params = function(){  var obj = {"model":_alias1.RegisterExternalLoginModel(),"returnUrl":""}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$IsApi = null;action.$AjaxOptions = function(){  var obj = {dataType:"json",contentType:"application/json",cache:false,method:POST}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"ExternalLoginFailure": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = {};action.$_Url = null;action.$GetUrl = function (routeData) { var f = $dp.$JsNet.$Helpers.$Shared.$Action.getUrlFromTemplate; if(!routeData) { return action.$_Url || f(action); } else { return f(action, routeData); } };action.$Names = { action : "ExternalLoginFailure", controller : "Account", area : "" };action.$Params = function(){  var obj = null; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$IsApi = null;action.$AjaxOptions = function(){  var obj = {dataType:"json",contentType:"application/json",cache:false,method:POST}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"ExternalLoginsList": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = {};action.$_Url = null;action.$GetUrl = function (routeData) { var f = $dp.$JsNet.$Helpers.$Shared.$Action.getUrlFromTemplate; if(!routeData) { return action.$_Url || f(action); } else { return f(action, routeData); } };action.$Names = { action : "ExternalLoginsList", controller : "Account", area : "" };action.$Params = function(){  var obj = {"returnUrl":""}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$IsApi = null;action.$AjaxOptions = function(){  var obj = {dataType:"json",contentType:"application/json",cache:false,method:POST}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"RemoveExternalLogins": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = {};action.$_Url = null;action.$GetUrl = function (routeData) { var f = $dp.$JsNet.$Helpers.$Shared.$Action.getUrlFromTemplate; if(!routeData) { return action.$_Url || f(action); } else { return f(action, routeData); } };action.$Names = { action : "RemoveExternalLogins", controller : "Account", area : "" };action.$Params = function(){  var obj = null; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$IsApi = null;action.$AjaxOptions = function(){  var obj = {dataType:"json",contentType:"application/json",cache:false,method:POST}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }()},
"Home":{"Index": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = {};action.$_Url = null;action.$GetUrl = function (routeData) { var f = $dp.$JsNet.$Helpers.$Shared.$Action.getUrlFromTemplate; if(!routeData) { return action.$_Url || f(action); } else { return f(action, routeData); } };action.$Names = { action : "Index", controller : "Home", area : "" };action.$Params = function(){  var obj = {"returnUrl":""}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$IsApi = null;action.$AjaxOptions = function(){  var obj = {dataType:"json",contentType:"application/json",cache:false,method:POST}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }()},
"Todo":{"PutTodoItem": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = {};action.$_Url = null;action.$GetUrl = function (routeData) { var f = $dp.$JsNet.$Helpers.$Shared.$Action.getUrlFromTemplate; if(!routeData) { return action.$_Url || f(action); } else { return f(action, routeData); } };action.$Names = { action : "PutTodoItem", controller : "Todo", area : "" };action.$Params = function(){  var obj = {"id":0,"todoItemDto":_alias1.TodoItemDto()}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$IsApi = { $httpMethodArray:{$put:"put",$items:["put"],$single:"put"} };action.$AjaxOptions = function(){  var obj = {dataType:"text",contentType:"application/json",cache:false,method:null}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"PostTodoItem": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = {};action.$_Url = null;action.$GetUrl = function (routeData) { var f = $dp.$JsNet.$Helpers.$Shared.$Action.getUrlFromTemplate; if(!routeData) { return action.$_Url || f(action); } else { return f(action, routeData); } };action.$Names = { action : "PostTodoItem", controller : "Todo", area : "" };action.$Params = function(){  var obj = {"todoItemDto":_alias1.TodoItemDto()}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$IsApi = { $httpMethodArray:{$post:"post",$items:["post"],$single:"post"} };action.$AjaxOptions = function(){  var obj = {dataType:"text",contentType:"application/json",cache:false,method:null}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"DeleteTodoItem": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = {};action.$_Url = null;action.$GetUrl = function (routeData) { var f = $dp.$JsNet.$Helpers.$Shared.$Action.getUrlFromTemplate; if(!routeData) { return action.$_Url || f(action); } else { return f(action, routeData); } };action.$Names = { action : "DeleteTodoItem", controller : "Todo", area : "" };action.$Params = function(){  var obj = {"id":0}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$IsApi = { $httpMethodArray:{$delete:"delete",$items:["delete"],$single:"delete"} };action.$AjaxOptions = function(){  var obj = {dataType:"text",contentType:"application/json",cache:false,method:null}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"testPut": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = {};action.$_Url = null;action.$GetUrl = function (routeData) { var f = $dp.$JsNet.$Helpers.$Shared.$Action.getUrlFromTemplate; if(!routeData) { return action.$_Url || f(action); } else { return f(action, routeData); } };action.$Names = { action : "testPutt", controller : "Todo", area : "" };action.$Params = function(){  var obj = null; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$IsApi = { $httpMethodArray:{$PUT:"PUT",$TEST:"TEST",$GET:"GET",$items:["PUT","TEST","GET"],$single:null} };action.$AjaxOptions = function(){  var obj = {dataType:"text",contentType:"application/json",cache:false,method:null}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"PutTest": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = {};action.$_Url = null;action.$GetUrl = function (routeData) { var f = $dp.$JsNet.$Helpers.$Shared.$Action.getUrlFromTemplate; if(!routeData) { return action.$_Url || f(action); } else { return f(action, routeData); } };action.$Names = { action : "PutTest", controller : "Todo", area : "" };action.$Params = function(){  var obj = {"test":""}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$IsApi = { $httpMethodArray:{$put:"put",$items:["put"],$single:"put"} };action.$AjaxOptions = function(){  var obj = {dataType:"text",contentType:"application/json",cache:false,method:null}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"test1Put": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = {};action.$_Url = null;action.$GetUrl = function (routeData) { var f = $dp.$JsNet.$Helpers.$Shared.$Action.getUrlFromTemplate; if(!routeData) { return action.$_Url || f(action); } else { return f(action, routeData); } };action.$Names = { action : "test1Put", controller : "Todo", area : "" };action.$Params = function(){  var obj = null; return obj; };action.$Return = function(){  var obj = $dp.$shared.$arrayFactory(_alias2.Personnage()); return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$IsApi = { $httpMethodArray:{$put:"put",$items:["put"],$single:"put"} };action.$AjaxOptions = function(){  var obj = {dataType:"json",contentType:"application/json",cache:false,method:null}; return obj; };action.$RouteTemplate = 'customers/{customerId}/orders';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }()},
"TodoList":{"GetTodoLists": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = {};action.$_Url = null;action.$GetUrl = function (routeData) { var f = $dp.$JsNet.$Helpers.$Shared.$Action.getUrlFromTemplate; if(!routeData) { return action.$_Url || f(action); } else { return f(action, routeData); } };action.$Names = { action : "GetTodoLists", controller : "TodoList", area : "" };action.$Params = function(){  var obj = null; return obj; };action.$Return = function(){  var obj = $dp.$shared.$arrayFactory(_alias1.TodoListDto()); return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$IsApi = { $httpMethodArray:{$get:"get",$items:["get"],$single:"get"} };action.$AjaxOptions = function(){  var obj = {dataType:"json",contentType:"application/json",cache:false,method:null}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"GetTodoList": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = {};action.$_Url = null;action.$GetUrl = function (routeData) { var f = $dp.$JsNet.$Helpers.$Shared.$Action.getUrlFromTemplate; if(!routeData) { return action.$_Url || f(action); } else { return f(action, routeData); } };action.$Names = { action : "GetTodoList", controller : "TodoList", area : "" };action.$Params = function(){  var obj = {"id":0}; return obj; };action.$Return = function(){  var obj = _alias1.TodoListDto(); return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$IsApi = { $httpMethodArray:{$get:"get",$items:["get"],$single:"get"} };action.$AjaxOptions = function(){  var obj = {dataType:"json",contentType:"application/json",cache:false,method:null}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"PutTodoList": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = {};action.$_Url = null;action.$GetUrl = function (routeData) { var f = $dp.$JsNet.$Helpers.$Shared.$Action.getUrlFromTemplate; if(!routeData) { return action.$_Url || f(action); } else { return f(action, routeData); } };action.$Names = { action : "PutTodoList", controller : "TodoList", area : "" };action.$Params = function(){  var obj = {"id":0,"todoListDto":_alias1.TodoListDto()}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$IsApi = { $httpMethodArray:{$put:"put",$items:["put"],$single:"put"} };action.$AjaxOptions = function(){  var obj = {dataType:"text",contentType:"application/json",cache:false,method:null}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"PostTodoList": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = {};action.$_Url = null;action.$GetUrl = function (routeData) { var f = $dp.$JsNet.$Helpers.$Shared.$Action.getUrlFromTemplate; if(!routeData) { return action.$_Url || f(action); } else { return f(action, routeData); } };action.$Names = { action : "PostTodoList", controller : "TodoList", area : "" };action.$Params = function(){  var obj = {"todoListDto":_alias1.TodoListDto()}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$IsApi = { $httpMethodArray:{$post:"post",$items:["post"],$single:"post"} };action.$AjaxOptions = function(){  var obj = {dataType:"text",contentType:"application/json",cache:false,method:null}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }(),"DeleteTodoList": function actionFactory () { try { var obj = {};obj.$action0 = function actionFactory () { try { var action = {};action.$_Url = null;action.$GetUrl = function (routeData) { var f = $dp.$JsNet.$Helpers.$Shared.$Action.getUrlFromTemplate; if(!routeData) { return action.$_Url || f(action); } else { return f(action, routeData); } };action.$Names = { action : "DeleteTodoList", controller : "TodoList", area : "" };action.$Params = function(){  var obj = {"id":0}; return obj; };action.$Return = function(){  var obj = {}; return obj; };action.$Enums = function(){  var obj = null; return obj; };action.$IsApi = { $httpMethodArray:{$delete:"delete",$items:["delete"],$single:"delete"} };action.$AjaxOptions = function(){  var obj = {dataType:"text",contentType:"application/json",cache:false,method:null}; return obj; };action.$RouteTemplate = '';return action; } catch(ex) { throw ex;  } }();return obj; } catch(ex) { throw ex;  } }()}};
//#endregion
})();
})(); 
})();
